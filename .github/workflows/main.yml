name: Build Wii Core (Dolphin)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake coreutils build-essential python3

      - name: Install EMSDK
        shell: bash
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          echo "PATH=$GITHUB_WORKSPACE/emsdk:$GITHUB_WORKSPACE/emsdk/upstream/emscripten:$PATH" >> $GITHUB_ENV

      - name: Load EMSDK
        shell: bash
        run: |
          source $GITHUB_WORKSPACE/emsdk/emsdk_env.sh
          echo "EMSDK=$EMSDK" >> $GITHUB_ENV
          echo "EM_CONFIG=$EM_CONFIG" >> $GITHUB_ENV
          echo "EM_CACHE=$EM_CACHE" >> $GITHUB_ENV

      - name: Clone Dolphin
        run: |
          git clone https://github.com/dolphin-emu/dolphin.git dolphin-src

      - name: Configure CMake for Wii Core
        shell: bash
        run: |
          source $GITHUB_WORKSPACE/emsdk/emsdk_env.sh
          mkdir -p build-wii
          cd build-wii
          emcmake cmake ../dolphin-src \
            -DCMAKE_BUILD_TYPE=Release \
            -DENABLE_GENERIC=ON \
            -DENABLE_QT=OFF \
            -DENABLE_SDL=OFF \
            -DENABLE_X11=OFF \
            -DENABLE_VULKAN=OFF \
            -DENABLE_HEADLESS=ON \
            -DWII_CORE_ONLY=ON \
            -G Ninja

      - name: Build Wii Core with Retry
        shell: bash
        run: |
          cd build-wii
          set +e
          ninja -k 1 || true
          echo "Retrying failed files..."
          ninja || true
          set -e

      - name: Link Partial Output to WASM
        shell: bash
        run: |
          cd build-wii
          OBJECTS=$(find Source/Core -name '*.o')
          if [ -n "$OBJECTS" ]; then
            emcc $OBJECTS -o dolphin_wii_core.js -s WASM=1 -s MODULARIZE=1 -s EXPORT_ES6=1 \
              -s 'EXPORTED_RUNTIME_METHODS=["cwrap","ccall"]' || echo "Partial WASM build."
          else
            echo "No .o files found. Build likely failed."
          fi

      - name: Upload Wii Core Build
        uses: actions/upload-artifact@v4
        with:
          name: dolphin-wii-core
          path: build-wii/dolphin_wii_core.*
